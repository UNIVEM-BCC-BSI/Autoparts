{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1S6ZBNnmp3ecvcUFzw0kuoU7E93h9RR95","timestamp":1760488901697}],"authorship_tag":"ABX9TyP61fY0aOcmwrg+D6CmeA3k"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Projeto Web-Crawler"],"metadata":{"id":"GIMjpuL09IDE"}},{"cell_type":"code","source":["# bibliotecas\n","import requests\n","from lxml import html\n","from urllib.parse import urljoin\n","from bs4 import BeautifulSoup\n","\n","# página de login e dados\n","login_url = \"https://portal.lmmoto.com.br/glstorefront/glmotos/pt/BRL/login\"\n","USERNAME = \"contato@siromotos.com.br\"\n","PASSWORD = \"Whats_123\"\n","\n","# XPaths do usuário e da senha\n","xpath_user = \"/html/body/main/div[3]/div/div[1]/div/div/div/form/div[1]/input\"\n","xpath_pass = \"/html/body/main/div[3]/div/div[1]/div/div/div/form/div[2]/input\"\n","\n","# XPath para encontrar o form (usamos o pai comum das inputs)\n","xpath_form = \"/html/body/main/div[3]/div/div[1]/div/div/div/form\"\n","\n","# babeçalhos básicos\n","headers = {\n","    \"User-Agent\": \"Mozilla/5.0 (compat) Python requests\",\n","    \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\",\n","}\n","\n","session = requests.Session()\n","\n","# GET da página de login\n","r = session.get(login_url, headers=headers, timeout=15)\n","tree = html.fromstring(r.text)\n","\n","\n","# localizar o form e inputs usando as XPaths\n","form_els = tree.xpath(xpath_form)\n","if not form_els:\n","    raise SystemExit(\"Form não encontrado com a XPath fornecida. Verifique a XPath ou abra DevTools para confirmar.\")\n","\n","form = form_els[0]\n","\n","# extrair a URL de action do form (resolver relative->absolute)\n","action = form.get(\"action\") or login_url\n","action_url = urljoin(login_url, action)\n","\n","# localizar os inputs de usuário e senha e extrair o atributo 'name'\n","user_inputs = tree.xpath(xpath_user)\n","pass_inputs = tree.xpath(xpath_pass)\n","\n","if not user_inputs or not pass_inputs:\n","    raise SystemExit(\"Inputs de usuário ou senha não encontrados com as XPaths fornecidas.\")\n","\n","user_input = user_inputs[0]\n","pass_input = pass_inputs[0]\n","\n","user_name = user_input.get(\"name\")\n","pass_name = pass_input.get(\"name\")\n","\n","if not user_name or not pass_name:\n","    # se não houver atributo name, não é possível usar requests para preenchê-los diretamente\n","    raise SystemExit(\"Os inputs não têm atributo 'name'. Isso normalmente exige um navegador (Selenium/Playwright) ou inspecionar a requisição no DevTools para ver os parâmetros reais.\")\n","\n","# coletar campos hidden (CSRF, outros)\n","payload = {}\n","hidden_inputs = form.xpath(\".//input[@type='hidden']\")\n","for hid in hidden_inputs:\n","    n = hid.get(\"name\")\n","    v = hid.get(\"value\", \"\")\n","    if n:\n","        payload[n] = v\n","\n","# preencher usuário e senha no payload\n","payload[user_name] = USERNAME\n","payload[pass_name] = PASSWORD\n","\n","# headers adicionais e POST\n","post_headers = headers.copy()\n","post_headers.update({\n","    \"Referer\": login_url,\n","    \"Content-Type\": \"application/x-www-form-urlencoded\"\n","})\n","\n","resp = session.post(action_url, data=payload, headers=post_headers, allow_redirects=True, timeout=15)\n","\n","# checar sucesso\n","print(\"POST para:\", action_url)\n","print(\"Código:\", resp.status_code)\n","print(\"URL final após redirects:\", resp.url)\n","\n","# heurísticas para checar login:\n","if \"logout\" in resp.text.lower() or \"sair\" in resp.text.lower():\n","    print(\"Login bem-sucedido.\")\n","elif resp.url != login_url:\n","    print(\"Provavelmente autenticado — URL mudou após o POST.\")\n","else:\n","    print(\"Login falho. Verifique resposta ou abra DevTools para ver a requisição real.\")\n","print(\"-\" * 100)\n","\n","# requisição da página\n","dados = session.get(\"https://portal.lmmoto.com.br/glstorefront/glmotos/pt/BRL/Motos/Pe%C3%A7as/c/glmotos_pecas\")\n","soup = BeautifulSoup(dados.content, 'html.parser')\n","\n","# coleta dos nomes e preços\n","nomes = soup.find_all('div', class_='product__list--name')\n","precos = soup.find_all('div', class_='precoPor')\n","\n","# dados sendo exibidos\n","for i in range(min(len(nomes), len(precos))):\n","    nome = \" \".join(nomes[i].text.split())\n","    preco = \" \".join(precos[i].text.replace(\"Por\", \"\").split())\n","\n","    print(f\"Produto: {nome}\")\n","    print(f\"Preço: {preco}\")\n","    print(\"-\" * 100)"],"metadata":{"id":"EN62WfymDJYD"},"execution_count":null,"outputs":[]}]}